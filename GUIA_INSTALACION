
Guia para instalar Elgg.2.3.9 en Linux Mint 18.02 (basado en Ubuntu 16.04), Apache2 , MariaDB y PHP 7.2

1) Se instala Apache


 sudo apt update
 sudo apt install apache2


    Luego los comando para Parar, Iniciar y Habilitar Apache son:
         sudo systemctl stop apache2.service
         sudo systemctl start apache2.service
         sudo systemctl enable apache2.service

    Para ver si funciona debe ir a la dirección de Host Local, en la mayoria de los casos es http://localhost, aunque podria ser la del servidor (ej: etic.undec.edu.ar) 



2) Se instala MariaDB

 sudo apt-get install mariadb-server mariadb-client

    Luego los comandos para manejar la Base de Datos son:
         sudo systemctl stop mysql.service
         sudo systemctl start mysql.service
         sudo systemctl enable mysql.service

    A continuación se configuro el acceso a la Base de Datos, protegiendola de accesos externos por criterio de seguridad adoptado en este momento.
        sudo mysql_secure_installation
        
        y se siguen las instrucciones de la siguiente manera:
            Enter current password for root (enter for none): Just press the Enter
            Set root password? [Y/n]: Y
            New password: Enter password
            Re-enter new password: Repeat password
            Remove anonymous users? [Y/n]: Y
            Disallow root login remotely? [Y/n]: Y
            Remove test database and access to it? [Y/n]:  Y
            Reload privilege tables now? [Y/n]:  Y

3) Instalar PHP 7.2 y modulos relacinados

 Primero agregar repositorios de terceros:

    sudo apt-get install software-properties-common
    sudo add-apt-repository ppa:ondrej/php

    *(aquí podria fallar en ese caso buscar en internet otros repositorios que esten activos)

 Actualizar: 

    sudo apt update

 Instalar PHP y modulos:

    sudo apt install php7.2 libapache2-mod-php7.2 php7.2-common php7.2-sqlite3 php7.2-curl php7.2-intl php7.2-mbstring php7.2-xmlrpc php7.2-mysql php7.2-gd php7.2-xml php7.2-cli php7.2-zip

 Luego abrir y configurar el siguiente archivo para adecuarlo a las necesidades de Elgg:
   
     sudo nano /etc/php/7.2/apache2/php.ini

    El archivo debe quedar así:
        file_uploads = On
        allow_url_fopen = On
        short_open_tag = On
        memory_limit = 256M
        upload_max_filesize = 100M
        max_execution_time = 360
        date.timezone = America/Chicago

    Luego de esto se debe reiniciar Apache para que cargue las actulizaciones de PHP:
        sudo systemctl restart apache2.service

4) Crear Base de Datos para Elgg

 Ingresar a MariaDB como root:
    sudo mysql -u root -p

 Crear Base de Datos:
    CREATE DATABASE elgg; 

 Crear Usuario y Clave:
    CREATE USER 'elgguser'@'localhost' IDENTIFIED BY 'new_password_here';

 Asociar Usuario a la Base de Datos Creada:
    GRANT ALL ON elgg.* TO 'elgguser'@'localhost' IDENTIFIED BY 'user_password_here' WITH GRANT OPTION;

 Guardar y salir:
    FLUSH PRIVILEGES;
    EXIT;

    *elgg: nombre que queramos darle a nuestra Base de Datos.
    *elgguser: nombre que queramos darle a nuestro Usuario de la Base de Datos.
    *new_password_here : clave que queramos darle a nuestro Usuario de la Base de Datos.

5) Descargar Elgg

 Se descarga elgg-2.3.9 (pero puede ser otro segun el caso):
    cd /tmp && wget https://elgg.org/download/elgg-2.3.9.zip

 Se descomprime:
    unzip elgg-2.3.9.zip

 Se crea la carpeta para Elgg (puede ser otro nombre) y se mueve la carpeta descargada. Se dan privilegios:
    sudo mv elgg-2.3.9 /var/www/html/elgg
    sudo chown -R www-data:www-data /var/www/html/elgg/
    sudo chmod -R 755 /var/www/html/elgg/

 Luego Crear carpetas para alojar los Datos de Elgg, y se le da privilegios:
    sudo mkdir -p /var/www/data
    sudo chown -R www-data:www-data /var/www/data/
    sudo chmod -R 755 /var/www/data/

6) Cofigurar archivos de Apache y Elgg

modificar los archivos (ver los archivos de ejemplo adjuntos o en el servidor):
 /var/www/html/elgg/.htaccess (esta en la carpeta donde esta Elgg)
 /etc/apache2/apache2.conf
 /etc/apache2/sites-available/elgg.conf

7) habilitar modulo rewrite en Apache y sitio Elgg CMS 
    sudo a2ensite elgg.conf
    sudo a2enmod rewrite
    sudo systemctl restart apache2.service

8) Instalar Elgg

  Ingresar a la dirección de Host por ejemplo:  http://localhost, http://etic.undec.edu.ar o  http://lo_que_sea.com

  Y luego seguir las indicaciones:

       Welcome...
    
       Database installation
       Database Username:  elgguser
       Database Password:  user_password_here
       Database Name:  elgg
       Database Host (en todos los casos suele ser igual localhost): localhost
       Database Table Prefix (a elección pero generalmete se deja en elgg_):  elgg_
       Timezone:  UTC

       Configure Site
       Site Name (a elección): Nombre De My Red Social
       Site Email Adress (a elección segun el servicio de mail): admin@lo_que_sea.com
       Site URL (MUY IMPORTANTE!!! colocar bien esta dirección sino habra que modificar la Base de Datos): http://lo_que_sea.com
       Data Directory: /var/www/data
       Defaul Site Access: Public

       Create Admin account
       Display Name: nombre de visible
       Email Admin: admin@lo_que_sea.com
       Username: nombre del usuario admin
       Password: mi_clave_admin
       Password Again: mi_clave_admin

    NEXT !!! 

    Si todo salio bien ya debe estar funcionando la plataforma.

 *Esta guia se baso en la pagina: https://websiteforstudents.com/install-elgg-social-networking-engine-on-ubuntu-16-04-17-10-18-04-with-apache2-mariadb-and-php-7-2-support/


Otras configuraciones

instalar ssmtp para el envio de mails: 
    apt-get update; 
    apt-get install ssmtp

configurar  /etc/ssmtp/ssmtp.conf para que quede así:
# Config file for sSMTP sendmail
#
# The person who gets all mail for userids < 1000
# Make this empty to disable rewriting.
root=riosbourne555@gmail.com

# The place where the mail goes. The actual machine name is required no 
# MX records are consulted. Commonly mailhosts are named mail.domain.com
mailhub=smtp.gmail.com:587

# Where will the mail seem to come from?
#rewriteDomain=

# The full hostname
hostname=localhost

# Are users allowed to set their own From: address?
# YES - Allow the user to specify their own From: address
# NO - Use the system generated From: address
#FromLineOverride=YES

AuthUser=riosbourne555@gmail.com
AuthPass=98732150a
UseSTARTTLS=YES
UseTLS=YES

Dar autorización a aplicación Poco Segura desde Seguridad de Google
